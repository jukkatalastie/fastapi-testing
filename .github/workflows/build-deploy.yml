name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env: 
      DATABASE_HOSTNAME: ${{vars.DATABASE_HOSTNAME}} 
      DATABASE_PORT: ${{vars.DATABASE_PORT}} 
      DATABASE_PASSWORD: ${{vars.DATABASE_PASSWORD}} 
      DATABASE_NAME: ${{vars.DATABASE_NAME}}
      DATABASE_USERNAME: postgres 
      SECRET_KEY: ${{vars.SECRET_KEY}} 
      ALGORITHM: ${{vars.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{vars.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{vars.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{vars.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

          #      -
          #        name: Login to Docker Hub
          #        uses: docker/login-action@v3
          #        with:
          #          username: ${{ vars.DOCKER_HUB_USERNAME }}
          #          password: ${{ vars.DOCKER_HUB_ACCESS_TOKEN }}
          #      -
          #        name: Set up Docker Buildx
          #        uses: docker/setup-buildx-action@v3
          #      -
          #        name: Build and push
          #        uses: docker/build-push-action@v6
          #        with:
          #          push: true
          #          tags: ${{ vars.DOCKER_HUB_USERNAME }}/fastapi:latest
          #
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: testing
    steps:
      - name: deploying stuff
        run: echo "going to deploy some stuff"

      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PROD_HOST }}
          username: ${{ vars.PROD_USERNAME }}
          key: ${{ vars.PROD_KEY }}
          port: ${{ vars.PROD_PORT }}
          script: |
            cd app/src
            git pull
            sudo systemctl restart api
            echo ${{vars.PROD_PASSWORD}} | sudo -S systemctl restart api
